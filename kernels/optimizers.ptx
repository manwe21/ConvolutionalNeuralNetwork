//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-28845127
// Cuda compilation tools, release 11.0, V11.0.221
// Based on LLVM 3.4svn
//

.version 7.0
.target sm_52
.address_size 64

	// .globl	adam

.visible .entry adam(
	.param .u64 adam_param_0,
	.param .u64 adam_param_1,
	.param .u64 adam_param_2,
	.param .u64 adam_param_3,
	.param .f32 adam_param_4,
	.param .f32 adam_param_5,
	.param .f32 adam_param_6,
	.param .u32 adam_param_7,
	.param .u32 adam_param_8
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<32>;
	.reg .b32 	%r<17>;
	.reg .f64 	%fd<9>;
	.reg .b64 	%rd<14>;


	ld.param.u64 	%rd2, [adam_param_0];
	ld.param.u64 	%rd3, [adam_param_1];
	ld.param.u64 	%rd4, [adam_param_2];
	ld.param.u64 	%rd5, [adam_param_3];
	ld.param.f32 	%f3, [adam_param_4];
	ld.param.f32 	%f4, [adam_param_5];
	ld.param.f32 	%f5, [adam_param_6];
	ld.param.u32 	%r5, [adam_param_7];
	ld.param.u32 	%r6, [adam_param_8];
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r16, %r7, %r8, %r9;
	setp.ge.s32	%p1, %r16, %r6;
	@%p1 bra 	BB0_3;

	cvta.to.global.u64 	%rd1, %rd4;
	cvt.rn.f32.s32	%f6, %r5;
	lg2.approx.ftz.f32 	%f7, %f4;
	mul.ftz.f32 	%f8, %f6, %f7;
	ex2.approx.ftz.f32 	%f9, %f8;
	mov.f32 	%f10, 0f3F800000;
	sub.ftz.f32 	%f1, %f10, %f9;
	lg2.approx.ftz.f32 	%f11, %f5;
	mul.ftz.f32 	%f12, %f6, %f11;
	ex2.approx.ftz.f32 	%f13, %f12;
	sub.ftz.f32 	%f2, %f10, %f13;
	mov.u32 	%r12, %nctaid.x;
	mul.lo.s32 	%r1, %r12, %r8;
	cvta.to.global.u64 	%rd8, %rd3;
	cvta.to.global.u64 	%rd10, %rd5;
	cvta.to.global.u64 	%rd12, %rd2;

BB0_2:
	mul.wide.s32 	%rd6, %r16, 4;
	add.s64 	%rd7, %rd1, %rd6;
	ld.global.f32 	%f14, [%rd7];
	add.s64 	%rd9, %rd8, %rd6;
	sub.ftz.f32 	%f16, %f10, %f4;
	ld.global.f32 	%f17, [%rd9];
	mul.ftz.f32 	%f18, %f16, %f17;
	fma.rn.ftz.f32 	%f19, %f14, %f4, %f18;
	st.global.f32 	[%rd7], %f19;
	add.s64 	%rd11, %rd10, %rd6;
	ld.global.f32 	%f20, [%rd11];
	sub.ftz.f32 	%f21, %f10, %f5;
	ld.global.f32 	%f22, [%rd9];
	mul.ftz.f32 	%f23, %f21, %f22;
	mul.ftz.f32 	%f24, %f22, %f23;
	fma.rn.ftz.f32 	%f25, %f20, %f5, %f24;
	st.global.f32 	[%rd11], %f25;
	ld.global.f32 	%f26, [%rd7];
	div.approx.ftz.f32 	%f27, %f26, %f1;
	div.approx.ftz.f32 	%f28, %f25, %f2;
	sqrt.approx.ftz.f32 	%f29, %f28;
	cvt.ftz.f64.f32	%fd1, %f29;
	add.f64 	%fd2, %fd1, 0d38100000000A639B;
	cvt.ftz.f64.f32	%fd3, %f3;
	div.rn.f64 	%fd4, %fd3, %fd2;
	cvt.ftz.f64.f32	%fd5, %f27;
	mul.f64 	%fd6, %fd5, %fd4;
	add.s64 	%rd13, %rd12, %rd6;
	ld.global.f32 	%f30, [%rd13];
	cvt.ftz.f64.f32	%fd7, %f30;
	sub.f64 	%fd8, %fd7, %fd6;
	cvt.rn.ftz.f32.f64	%f31, %fd8;
	st.global.f32 	[%rd13], %f31;
	mov.u32 	%r15, 0;
	st.global.u32 	[%rd9], %r15;
	add.s32 	%r16, %r1, %r16;
	setp.lt.s32	%p2, %r16, %r6;
	@%p2 bra 	BB0_2;

BB0_3:
	ret;
}

	// .globl	adaDelta
.visible .entry adaDelta(
	.param .u64 adaDelta_param_0,
	.param .u64 adaDelta_param_1,
	.param .u64 adaDelta_param_2,
	.param .f32 adaDelta_param_3,
	.param .f32 adaDelta_param_4,
	.param .u32 adaDelta_param_5
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<19>;
	.reg .b32 	%r<12>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd4, [adaDelta_param_0];
	ld.param.u64 	%rd5, [adaDelta_param_1];
	ld.param.u64 	%rd6, [adaDelta_param_2];
	ld.param.f32 	%f2, [adaDelta_param_3];
	ld.param.f32 	%f3, [adaDelta_param_4];
	ld.param.u32 	%r6, [adaDelta_param_5];
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r11, %r7, %r1, %r8;
	setp.ge.s32	%p1, %r11, %r6;
	@%p1 bra 	BB1_3;

	cvta.to.global.u64 	%rd1, %rd4;
	cvta.to.global.u64 	%rd2, %rd5;
	cvta.to.global.u64 	%rd3, %rd6;
	mov.f32 	%f4, 0f3F800000;
	sub.ftz.f32 	%f1, %f4, %f3;
	mov.u32 	%r9, %nctaid.x;
	mul.lo.s32 	%r3, %r9, %r1;

BB1_2:
	mul.wide.s32 	%rd7, %r11, 4;
	add.s64 	%rd8, %rd3, %rd7;
	ld.global.f32 	%f5, [%rd8];
	add.s64 	%rd9, %rd2, %rd7;
	ld.global.f32 	%f6, [%rd9];
	lg2.approx.ftz.f32 	%f7, %f6;
	add.ftz.f32 	%f8, %f7, %f7;
	ex2.approx.ftz.f32 	%f9, %f8;
	mul.ftz.f32 	%f10, %f1, %f9;
	fma.rn.ftz.f32 	%f11, %f5, %f3, %f10;
	st.global.f32 	[%rd8], %f11;
	cvt.ftz.f64.f32	%fd1, %f11;
	add.f64 	%fd2, %fd1, 0d34B8851A0B548EA4;
	cvt.rn.ftz.f32.f64	%f12, %fd2;
	sqrt.approx.ftz.f32 	%f13, %f12;
	div.approx.ftz.f32 	%f14, %f2, %f13;
	ld.global.f32 	%f15, [%rd9];
	mul.ftz.f32 	%f16, %f14, %f15;
	add.s64 	%rd10, %rd1, %rd7;
	ld.global.f32 	%f17, [%rd10];
	sub.ftz.f32 	%f18, %f17, %f16;
	st.global.f32 	[%rd10], %f18;
	mov.u32 	%r10, 0;
	st.global.u32 	[%rd9], %r10;
	add.s32 	%r11, %r3, %r11;
	setp.lt.s32	%p2, %r11, %r6;
	@%p2 bra 	BB1_2;

BB1_3:
	ret;
}

	// .globl	adaGrad
.visible .entry adaGrad(
	.param .u64 adaGrad_param_0,
	.param .u64 adaGrad_param_1,
	.param .u64 adaGrad_param_2,
	.param .f32 adaGrad_param_3,
	.param .u32 adaGrad_param_4
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<15>;
	.reg .b32 	%r<12>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd4, [adaGrad_param_0];
	ld.param.u64 	%rd5, [adaGrad_param_1];
	ld.param.u64 	%rd6, [adaGrad_param_2];
	ld.param.f32 	%f1, [adaGrad_param_3];
	ld.param.u32 	%r6, [adaGrad_param_4];
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r11, %r7, %r1, %r8;
	setp.ge.s32	%p1, %r11, %r6;
	@%p1 bra 	BB2_3;

	cvta.to.global.u64 	%rd1, %rd4;
	cvta.to.global.u64 	%rd2, %rd6;
	cvta.to.global.u64 	%rd3, %rd5;
	mov.u32 	%r9, %nctaid.x;
	mul.lo.s32 	%r3, %r9, %r1;

BB2_2:
	mul.wide.s32 	%rd7, %r11, 4;
	add.s64 	%rd8, %rd3, %rd7;
	ld.global.f32 	%f2, [%rd8];
	lg2.approx.ftz.f32 	%f3, %f2;
	add.ftz.f32 	%f4, %f3, %f3;
	ex2.approx.ftz.f32 	%f5, %f4;
	add.s64 	%rd9, %rd2, %rd7;
	ld.global.f32 	%f6, [%rd9];
	add.ftz.f32 	%f7, %f5, %f6;
	st.global.f32 	[%rd9], %f7;
	cvt.ftz.f64.f32	%fd1, %f7;
	add.f64 	%fd2, %fd1, 0d34B8851A0B548EA4;
	cvt.rn.ftz.f32.f64	%f8, %fd2;
	sqrt.approx.ftz.f32 	%f9, %f8;
	div.approx.ftz.f32 	%f10, %f1, %f9;
	ld.global.f32 	%f11, [%rd8];
	mul.ftz.f32 	%f12, %f10, %f11;
	add.s64 	%rd10, %rd1, %rd7;
	ld.global.f32 	%f13, [%rd10];
	sub.ftz.f32 	%f14, %f13, %f12;
	st.global.f32 	[%rd10], %f14;
	mov.u32 	%r10, 0;
	st.global.u32 	[%rd8], %r10;
	add.s32 	%r11, %r3, %r11;
	setp.lt.s32	%p2, %r11, %r6;
	@%p2 bra 	BB2_2;

BB2_3:
	ret;
}

	// .globl	gradientDescent
.visible .entry gradientDescent(
	.param .u64 gradientDescent_param_0,
	.param .u64 gradientDescent_param_1,
	.param .f32 gradientDescent_param_2,
	.param .u32 gradientDescent_param_3
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<6>;
	.reg .b32 	%r<12>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd3, [gradientDescent_param_0];
	ld.param.u64 	%rd4, [gradientDescent_param_1];
	ld.param.f32 	%f1, [gradientDescent_param_2];
	ld.param.u32 	%r6, [gradientDescent_param_3];
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r11, %r7, %r1, %r8;
	setp.ge.s32	%p1, %r11, %r6;
	@%p1 bra 	BB3_3;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r9, %nctaid.x;
	mul.lo.s32 	%r3, %r9, %r1;

BB3_2:
	mul.wide.s32 	%rd5, %r11, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f2, [%rd6];
	mul.ftz.f32 	%f3, %f2, %f1;
	add.s64 	%rd7, %rd1, %rd5;
	ld.global.f32 	%f4, [%rd7];
	sub.ftz.f32 	%f5, %f4, %f3;
	st.global.f32 	[%rd7], %f5;
	mov.u32 	%r10, 0;
	st.global.u32 	[%rd6], %r10;
	add.s32 	%r11, %r3, %r11;
	setp.lt.s32	%p2, %r11, %r6;
	@%p2 bra 	BB3_2;

BB3_3:
	ret;
}


