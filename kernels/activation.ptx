//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-28845127
// Cuda compilation tools, release 11.0, V11.0.221
// Based on LLVM 3.4svn
//

.version 7.0
.target sm_52
.address_size 64

	// .globl	relu_forward

.visible .entry relu_forward(
	.param .u64 relu_forward_param_0,
	.param .u64 relu_forward_param_1,
	.param .align 4 .b8 relu_forward_param_2[20]
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd3, [relu_forward_param_0];
	ld.param.u64 	%rd4, [relu_forward_param_1];
	ld.param.u32 	%r3, [relu_forward_param_2+16];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r10, %r1, %r7, %r8;
	setp.ge.s32	%p1, %r10, %r3;
	@%p1 bra 	BB0_3;

	cvta.to.global.u64 	%rd1, %rd4;
	cvta.to.global.u64 	%rd2, %rd3;
	mov.u32 	%r9, %nctaid.x;
	mul.lo.s32 	%r4, %r9, %r1;

BB0_2:
	mul.wide.s32 	%rd5, %r10, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f1, [%rd6];
	setp.gt.ftz.f32	%p2, %f1, 0f00000000;
	selp.f32	%f2, %f1, 0f00000000, %p2;
	add.s64 	%rd7, %rd1, %rd5;
	st.global.f32 	[%rd7], %f2;
	add.s32 	%r10, %r4, %r10;
	setp.lt.s32	%p3, %r10, %r3;
	@%p3 bra 	BB0_2;

BB0_3:
	ret;
}

	// .globl	relu_backward
.visible .entry relu_backward(
	.param .u64 relu_backward_param_0,
	.param .u64 relu_backward_param_1,
	.param .u64 relu_backward_param_2,
	.param .align 4 .b8 relu_backward_param_3[20]
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd4, [relu_backward_param_0];
	ld.param.u64 	%rd5, [relu_backward_param_1];
	ld.param.u64 	%rd6, [relu_backward_param_2];
	ld.param.u32 	%r3, [relu_backward_param_3+16];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r10, %r1, %r7, %r8;
	setp.ge.s32	%p1, %r10, %r3;
	@%p1 bra 	BB1_3;

	cvta.to.global.u64 	%rd1, %rd6;
	cvta.to.global.u64 	%rd2, %rd5;
	cvta.to.global.u64 	%rd3, %rd4;
	mov.u32 	%r9, %nctaid.x;
	mul.lo.s32 	%r4, %r9, %r1;

BB1_2:
	mul.wide.s32 	%rd7, %r10, 4;
	add.s64 	%rd8, %rd3, %rd7;
	ld.global.f32 	%f1, [%rd8];
	setp.gt.ftz.f32	%p2, %f1, 0f00000000;
	selp.f32	%f2, 0f3F800000, 0f00000000, %p2;
	add.s64 	%rd9, %rd2, %rd7;
	ld.global.f32 	%f3, [%rd9];
	mul.ftz.f32 	%f4, %f3, %f2;
	add.s64 	%rd10, %rd1, %rd7;
	st.global.f32 	[%rd10], %f4;
	add.s32 	%r10, %r4, %r10;
	setp.lt.s32	%p3, %r10, %r3;
	@%p3 bra 	BB1_2;

BB1_3:
	ret;
}

	// .globl	sigmoid_forward
.visible .entry sigmoid_forward(
	.param .u64 sigmoid_forward_param_0,
	.param .u64 sigmoid_forward_param_1,
	.param .align 4 .b8 sigmoid_forward_param_2[20]
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<6>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd3, [sigmoid_forward_param_0];
	ld.param.u64 	%rd4, [sigmoid_forward_param_1];
	ld.param.u32 	%r3, [sigmoid_forward_param_2+16];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r10, %r1, %r7, %r8;
	setp.ge.s32	%p1, %r10, %r3;
	@%p1 bra 	BB2_3;

	cvta.to.global.u64 	%rd1, %rd4;
	cvta.to.global.u64 	%rd2, %rd3;
	mov.u32 	%r9, %nctaid.x;
	mul.lo.s32 	%r4, %r9, %r1;

BB2_2:
	mul.wide.s32 	%rd5, %r10, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f1, [%rd6];
	mul.ftz.f32 	%f2, %f1, 0fBFB8AA3B;
	ex2.approx.ftz.f32 	%f3, %f2;
	add.ftz.f32 	%f4, %f3, 0f3F800000;
	rcp.approx.ftz.f32 	%f5, %f4;
	add.s64 	%rd7, %rd1, %rd5;
	st.global.f32 	[%rd7], %f5;
	add.s32 	%r10, %r4, %r10;
	setp.lt.s32	%p2, %r10, %r3;
	@%p2 bra 	BB2_2;

BB2_3:
	ret;
}

	// .globl	sigmoid_backward
.visible .entry sigmoid_backward(
	.param .u64 sigmoid_backward_param_0,
	.param .u64 sigmoid_backward_param_1,
	.param .u64 sigmoid_backward_param_2,
	.param .align 4 .b8 sigmoid_backward_param_3[20]
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<11>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd4, [sigmoid_backward_param_0];
	ld.param.u64 	%rd5, [sigmoid_backward_param_1];
	ld.param.u64 	%rd6, [sigmoid_backward_param_2];
	ld.param.u32 	%r3, [sigmoid_backward_param_3+16];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r10, %r1, %r7, %r8;
	setp.ge.s32	%p1, %r10, %r3;
	@%p1 bra 	BB3_3;

	cvta.to.global.u64 	%rd1, %rd6;
	cvta.to.global.u64 	%rd2, %rd5;
	cvta.to.global.u64 	%rd3, %rd4;
	mov.u32 	%r9, %nctaid.x;
	mul.lo.s32 	%r4, %r9, %r1;

BB3_2:
	mul.wide.s32 	%rd7, %r10, 4;
	add.s64 	%rd8, %rd3, %rd7;
	ld.global.f32 	%f1, [%rd8];
	mul.ftz.f32 	%f2, %f1, 0fBFB8AA3B;
	ex2.approx.ftz.f32 	%f3, %f2;
	add.ftz.f32 	%f4, %f3, 0f3F800000;
	rcp.approx.ftz.f32 	%f5, %f4;
	mov.f32 	%f6, 0f3F800000;
	sub.ftz.f32 	%f7, %f6, %f5;
	mul.ftz.f32 	%f8, %f5, %f7;
	add.s64 	%rd9, %rd2, %rd7;
	ld.global.f32 	%f9, [%rd9];
	mul.ftz.f32 	%f10, %f9, %f8;
	add.s64 	%rd10, %rd1, %rd7;
	st.global.f32 	[%rd10], %f10;
	add.s32 	%r10, %r4, %r10;
	setp.lt.s32	%p2, %r10, %r3;
	@%p2 bra 	BB3_2;

BB3_3:
	ret;
}

	// .globl	tanh_forward
.visible .entry tanh_forward(
	.param .u64 tanh_forward_param_0,
	.param .u64 tanh_forward_param_1,
	.param .align 4 .b8 tanh_forward_param_2[20]
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<7>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd3, [tanh_forward_param_0];
	ld.param.u64 	%rd4, [tanh_forward_param_1];
	ld.param.u32 	%r3, [tanh_forward_param_2+16];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r10, %r1, %r7, %r8;
	setp.ge.s32	%p1, %r10, %r3;
	@%p1 bra 	BB4_3;

	cvta.to.global.u64 	%rd1, %rd4;
	cvta.to.global.u64 	%rd2, %rd3;
	mov.u32 	%r9, %nctaid.x;
	mul.lo.s32 	%r4, %r9, %r1;

BB4_2:
	mul.wide.s32 	%rd5, %r10, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f1, [%rd6];
	mul.ftz.f32 	%f2, %f1, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f3, %f2;
	sub.ftz.f32 	%f4, %f3, %f3;
	add.ftz.f32 	%f5, %f3, %f3;
	div.approx.ftz.f32 	%f6, %f4, %f5;
	add.s64 	%rd7, %rd1, %rd5;
	st.global.f32 	[%rd7], %f6;
	add.s32 	%r10, %r4, %r10;
	setp.lt.s32	%p2, %r10, %r3;
	@%p2 bra 	BB4_2;

BB4_3:
	ret;
}

	// .globl	tanh_backward
.visible .entry tanh_backward(
	.param .u64 tanh_backward_param_0,
	.param .u64 tanh_backward_param_1,
	.param .u64 tanh_backward_param_2,
	.param .align 4 .b8 tanh_backward_param_3[20]
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<14>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd4, [tanh_backward_param_0];
	ld.param.u64 	%rd5, [tanh_backward_param_1];
	ld.param.u64 	%rd6, [tanh_backward_param_2];
	ld.param.u32 	%r3, [tanh_backward_param_3+16];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r10, %r1, %r7, %r8;
	setp.ge.s32	%p1, %r10, %r3;
	@%p1 bra 	BB5_3;

	cvta.to.global.u64 	%rd1, %rd6;
	cvta.to.global.u64 	%rd2, %rd5;
	cvta.to.global.u64 	%rd3, %rd4;
	mov.u32 	%r9, %nctaid.x;
	mul.lo.s32 	%r4, %r9, %r1;

BB5_2:
	mul.wide.s32 	%rd7, %r10, 4;
	add.s64 	%rd8, %rd3, %rd7;
	ld.global.f32 	%f1, [%rd8];
	mul.ftz.f32 	%f2, %f1, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f3, %f2;
	sub.ftz.f32 	%f4, %f3, %f3;
	add.ftz.f32 	%f5, %f3, %f3;
	div.approx.ftz.f32 	%f6, %f4, %f5;
	lg2.approx.ftz.f32 	%f7, %f6;
	add.ftz.f32 	%f8, %f7, %f7;
	ex2.approx.ftz.f32 	%f9, %f8;
	mov.f32 	%f10, 0f3F800000;
	sub.ftz.f32 	%f11, %f10, %f9;
	add.s64 	%rd9, %rd2, %rd7;
	ld.global.f32 	%f12, [%rd9];
	mul.ftz.f32 	%f13, %f11, %f12;
	add.s64 	%rd10, %rd1, %rd7;
	st.global.f32 	[%rd10], %f13;
	add.s32 	%r10, %r4, %r10;
	setp.lt.s32	%p2, %r10, %r3;
	@%p2 bra 	BB5_2;

BB5_3:
	ret;
}


