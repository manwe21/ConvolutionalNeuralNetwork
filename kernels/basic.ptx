//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-28845127
// Cuda compilation tools, release 11.0, V11.0.221
// Based on LLVM 3.4svn
//

.version 7.0
.target sm_52
.address_size 64

	// .globl	transpose2d
.extern .shared .align 4 .b8 shData[];

.visible .entry transpose2d(
	.param .u64 transpose2d_param_0,
	.param .u64 transpose2d_param_1,
	.param .align 4 .b8 transpose2d_param_2[20]
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<16>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd3, [transpose2d_param_0];
	ld.param.u64 	%rd4, [transpose2d_param_1];
	ld.param.u32 	%r3, [transpose2d_param_2+12];
	ld.param.u32 	%r4, [transpose2d_param_2+8];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r15, %r1, %r9, %r10;
	mul.lo.s32 	%r5, %r4, %r3;
	setp.ge.s32	%p1, %r15, %r5;
	@%p1 bra 	BB0_3;

	cvta.to.global.u64 	%rd1, %rd4;
	cvta.to.global.u64 	%rd2, %rd3;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r6, %r11, %r1;

BB0_2:
	rem.s32 	%r12, %r15, %r4;
	div.s32 	%r13, %r15, %r4;
	mad.lo.s32 	%r14, %r12, %r3, %r13;
	mul.wide.s32 	%rd5, %r14, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f1, [%rd6];
	mul.wide.s32 	%rd7, %r15, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f1;
	add.s32 	%r15, %r6, %r15;
	setp.lt.s32	%p2, %r15, %r5;
	@%p2 bra 	BB0_2;

BB0_3:
	ret;
}

	// .globl	rotate180
.visible .entry rotate180(
	.param .u64 rotate180_param_0,
	.param .u64 rotate180_param_1,
	.param .align 4 .b8 rotate180_param_2[20]
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<23>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd3, [rotate180_param_0];
	ld.param.u64 	%rd4, [rotate180_param_1];
	ld.param.u32 	%r13, [rotate180_param_2+12];
	ld.param.u32 	%r12, [rotate180_param_2+8];
	ld.param.u32 	%r11, [rotate180_param_2+4];
	ld.param.u32 	%r10, [rotate180_param_2];
	ld.param.u32 	%r3, [rotate180_param_2+16];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r15, %ctaid.x;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r22, %r1, %r15, %r16;
	setp.ge.s32	%p1, %r22, %r3;
	@%p1 bra 	BB1_3;

	cvta.to.global.u64 	%rd1, %rd4;
	cvta.to.global.u64 	%rd2, %rd3;
	mul.lo.s32 	%r4, %r12, %r13;
	mul.lo.s32 	%r5, %r10, %r11;
	add.s32 	%r6, %r4, -1;
	mov.u32 	%r17, %nctaid.x;
	mul.lo.s32 	%r7, %r17, %r1;

BB1_2:
	div.s32 	%r18, %r22, %r5;
	rem.s32 	%r19, %r22, %r4;
	sub.s32 	%r20, %r6, %r19;
	mad.lo.s32 	%r21, %r18, %r4, %r20;
	mul.wide.s32 	%rd5, %r21, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f1, [%rd6];
	mul.wide.s32 	%rd7, %r22, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f1;
	add.s32 	%r22, %r7, %r22;
	setp.lt.s32	%p2, %r22, %r3;
	@%p2 bra 	BB1_2;

BB1_3:
	ret;
}

	// .globl	fill
.visible .entry fill(
	.param .u64 fill_param_0,
	.param .f32 fill_param_1,
	.param .align 4 .b8 fill_param_2[20]
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd2, [fill_param_0];
	ld.param.f32 	%f1, [fill_param_1];
	ld.param.u32 	%r3, [fill_param_2+16];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r10, %r1, %r7, %r8;
	setp.ge.s32	%p1, %r10, %r3;
	@%p1 bra 	BB2_3;

	cvta.to.global.u64 	%rd1, %rd2;
	mov.u32 	%r9, %nctaid.x;
	mul.lo.s32 	%r4, %r9, %r1;

BB2_2:
	mul.wide.s32 	%rd3, %r10, 4;
	add.s64 	%rd4, %rd1, %rd3;
	st.global.f32 	[%rd4], %f1;
	add.s32 	%r10, %r4, %r10;
	setp.lt.s32	%p2, %r10, %r3;
	@%p2 bra 	BB2_2;

BB2_3:
	ret;
}

	// .globl	sum
.visible .entry sum(
	.param .u64 sum_param_0,
	.param .u64 sum_param_1,
	.param .align 4 .b8 sum_param_2[20]
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd3, [sum_param_0];
	ld.param.u64 	%rd4, [sum_param_1];
	ld.param.u32 	%r3, [sum_param_2+16];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r10, %r1, %r7, %r8;
	setp.ge.s32	%p1, %r10, %r3;
	@%p1 bra 	BB3_3;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r9, %nctaid.x;
	mul.lo.s32 	%r4, %r9, %r1;

BB3_2:
	mul.wide.s32 	%rd5, %r10, 4;
	add.s64 	%rd6, %rd2, %rd5;
	add.s64 	%rd7, %rd1, %rd5;
	ld.global.f32 	%f1, [%rd7];
	ld.global.f32 	%f2, [%rd6];
	add.ftz.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd7], %f3;
	add.s32 	%r10, %r4, %r10;
	setp.lt.s32	%p2, %r10, %r3;
	@%p2 bra 	BB3_2;

BB3_3:
	ret;
}

	// .globl	findMax
.visible .entry findMax(
	.param .u64 findMax_param_0,
	.param .u64 findMax_param_1,
	.param .align 4 .b8 findMax_param_2[20]
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<7>;
	.reg .b32 	%r<20>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd4, [findMax_param_0];
	ld.param.u64 	%rd3, [findMax_param_1];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r8, %r1, %r2, %r3;
	cvta.to.global.u64 	%rd5, %rd4;
	mul.wide.s32 	%rd6, %r8, 4;
	add.s64 	%rd1, %rd5, %rd6;
	ld.global.f32 	%f3, [%rd1];
	shl.b32 	%r9, %r3, 2;
	mov.u32 	%r10, shData;
	add.s32 	%r11, %r10, %r9;
	st.shared.f32 	[%r11], %f3;
	bar.sync 	0;
	mov.u32 	%r19, 1;
	setp.lt.u32	%p1, %r1, 2;
	@%p1 bra 	BB4_5;

BB4_1:
	shl.b32 	%r5, %r19, 1;
	mul.lo.s32 	%r6, %r5, %r3;
	setp.ge.u32	%p2, %r6, %r1;
	@%p2 bra 	BB4_4;

	shl.b32 	%r13, %r6, 2;
	add.s32 	%r7, %r10, %r13;
	add.s32 	%r15, %r6, %r19;
	shl.b32 	%r16, %r15, 2;
	add.s32 	%r17, %r10, %r16;
	ld.shared.f32 	%f1, [%r17];
	ld.shared.f32 	%f4, [%r7];
	setp.geu.ftz.f32	%p3, %f4, %f1;
	@%p3 bra 	BB4_4;

	st.shared.f32 	[%r7], %f1;

BB4_4:
	bar.sync 	0;
	setp.lt.u32	%p4, %r5, %r1;
	mov.u32 	%r19, %r5;
	@%p4 bra 	BB4_1;

BB4_5:
	ld.shared.f32 	%f2, [shData];
	shl.b32 	%r18, %r2, 1;
	cvta.to.global.u64 	%rd7, %rd3;
	mul.wide.u32 	%rd8, %r18, 4;
	add.s64 	%rd2, %rd7, %rd8;
	setp.ne.s32	%p5, %r3, 0;
	@%p5 bra 	BB4_7;

	st.global.f32 	[%rd2], %f2;

BB4_7:
	ld.global.f32 	%f5, [%rd1];
	setp.neu.ftz.f32	%p6, %f2, %f5;
	@%p6 bra 	BB4_9;

	cvt.rn.f32.s32	%f6, %r3;
	st.global.f32 	[%rd2+4], %f6;

BB4_9:
	ret;
}


